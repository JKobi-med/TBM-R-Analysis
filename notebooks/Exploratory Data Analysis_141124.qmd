---
title: "Exploratory Data Analysis"
author: "Jonas J.R. Koberschinski"
date: "14-11-2024"
output: html
---

## Data import
```{r}
#| echo: true
#| include: false

# load mean&median data
# List of file names (without paths and extension)
file_names <- c(
  "bdnf_mean.txt",
  "bdnf_median.txt",
  
  "tau_mean.txt",
  "tau_median.txt",
  
  "psd95_mean.txt",
  "psd95_median.txt"
)

# Folder where the files are located
subfolder <- "/home/kobi/Documents/02 Vocational/TBM-R-Analysis/tables/mean&median_tables"

# Loop through the file names, read each table, and assign it to a variable
for (file_name in file_names) {
  # Construct the full file path by combining the subfolder and file name
  file_path <- file.path(subfolder, file_name)
  
  # Remove the .txt extension to get the base name for the variable
  var_name <- tools::file_path_sans_ext(file_name)
  
  # Read the table and assign it to a variable with the same name
  assign(var_name, read.table(file_path, sep = "\t", header = TRUE, row.names = NULL, quote = ""))
}


# load cpg-data
cpg <- read.table(file = '/home/kobi/Documents/02 Vocational/TBM-R-Analysis/tables/Ausgangstabellen/cpg.txt', sep = "\t", header = TRUE, row.names = NULL, quote = "")


# load wide data
# List of file names (without paths and extension)
file_names_wide <- c(
  "bdnf_mean_wide.txt",
  "bdnf_median_wide.txt",
  
  "tau_mean_wide.txt",
  "tau_median_wide.txt",
  
  "psd95_mean_wide.txt",
  "psd95_median_wide.txt"
)

# Folder where the files are located
subfolder_wide <- "/home/kobi/Documents/02 Vocational/TBM-R-Analysis/tables/wide_format/"

# Loop through the file names, read each table, and assign it to a variable
for (file_name in file_names_wide) {
  # Construct the full file path by combining the subfolder and file name
  file_path <- file.path(subfolder_wide, file_name)
  
  # Remove the .txt extension to get the base name for the variable
  var_name <- tools::file_path_sans_ext(file_name)
  
  # Read the table and assign it to a variable with the same name
  assign(var_name, read.table(file_path, sep = "\t", header = TRUE, row.names = NULL, quote = ""))
}

```

# EDA (Exploratory Data Analysis)

## Group Differences in Mean Values

```{r}
library(psych)
library(DescTools)

# Calculate the mode for each dataset
Mode(bdnf_mean$Mean, na.rm = TRUE) # Bimodal: two modes at 0 and 0.063
Mode(tau_mean$Mean, na.rm = TRUE) # Mode at 0.066875
Mode(psd95_mean$Mean, na.rm = TRUE) # Bimodal: two modes at 0.02377778 and 0.03177778

Mode(bdnf_median$Median, na.rm = TRUE) # Mode at 0 (92 occurrences)
Mode(tau_median$Median, na.rm = TRUE) # Mode at 0.02 (65 occurrences)
Mode(psd95_median$Median, na.rm = TRUE) # Mode at 0 (317 occurrences)

# Summarize data by group
tapply(bdnf_mean$Mean, bdnf_mean$Gruppe, summary, na.rm = TRUE) # Minimal difference
tapply(bdnf_median$Median, bdnf_median$Gruppe, summary, na.rm = TRUE) # Minimal difference

tapply(tau_mean$Mean, tau_mean$Gruppe, summary, na.rm = TRUE) # No difference
tapply(tau_median$Median, tau_median$Gruppe, summary, na.rm = TRUE) # No difference

tapply(psd95_mean$Mean, psd95_mean$Gruppe, summary, na.rm = TRUE) # No difference
tapply(psd95_median$Median, psd95_median$Gruppe, summary, na.rm = TRUE) # No difference

```

-   Bei BDNF zeigt sich eine leichte Differenz zwischen der Kontrollgruppe (Median: 0.07, Mean: 0.07326) und der Pianogruppe (Median: 0.064, Mean: 0.06598), welche eine niedrigere Metyhlierung (Median: -0.006, Mean: -0.00728) aufwies.
-   Weiterhin zeigen sich für die arithmetischen Mittel von BDNF und PSD95 zwei Modi.
-   Tau war unimodal.

## Time Differences in Mean Values

```{r}
# Methylierung: PSD95 < Tau < BDNF

tapply(bdnf_mean$Mean, bdnf_mean$Zeitpunkt, mean, na.rm = TRUE) # T0 > T1 < T2 (T0 < T2)
tapply(bdnf_median$Median, bdnf_median$Zeitpunkt, median, na.rm = TRUE) # T0 > T1 < T2 (T0 < T2)

tapply(tau_mean$Mean, tau_mean$Zeitpunkt, mean, na.rm = TRUE) # T0 < T1 = T2
tapply(tau_median$Median, tau_median$Zeitpunkt, median, na.rm = TRUE) # T0 = T1 > T2


# überhaupt keine Differenz
tapply(psd95_mean$Mean, psd95_mean$Zeitpunkt, mean, na.rm = TRUE) # T0 < T1 > T2 (T0 = T2)
tapply(psd95_median$Median, psd95_median$Zeitpunkt, median, na.rm = TRUE) # all = 0 
# noch geringer als Tau und BDNF methyliert
```

-   Die Gene sind allgemein eher gering methyliert (Mean \< 0,08, Median \< 0,04).
-   Dabei ist PSD95 am geringsten und BDNF am höchsten metyhyliert.
-   Bei BDNF zeigt sich, dass sich die Mittelwerte (Arithmetisch und Median) von T0 zu T1 leicht absenken und zu T2 wieder über das Niveau von T0 ansteigen.
-   Bei Tau steigt das arithmetische Mittel der Methylierung leicht von T0 zu T1 und hält das Niveau bei T2.
-   Bei PSD95 verbleibt der Median der Methylierun gleichbleibend bei 0, während das arithmetische Mittel der Methylierung von T0 zu T1 steigt aber bei T2 wieder auf das Ausgangsniveau zurückfällt.

## Important Point and Interval Estimators


```{r}
library(psych)
library(psychTools)

# Describe the wide format datasets
## BDNF
describe(bdnf_mean_wide)
describe(bdnf_median_wide)

## Tau
describe(tau_mean_wide)
describe(tau_median_wide)

## PSD95
describe(psd95_mean_wide)
describe(psd95_median_wide)
```

## Plotting EDA

### Boxplots
```{r}
eda_bdnf <- cpg
bdnfcols_to_modify <- 5:14

eda_tau <- cpg
taucols_to_modify <- 19:67

eda_psd95 <- cpg
psd95cols_to_modify <- 74:116

# Remove the suffix 'BDNF' from the column names in columns 5 to 14
colnames(eda_bdnf)[bdnfcols_to_modify] <- sub("BDNF$", "", colnames(eda_bdnf)[bdnfcols_to_modify])

# remove "Tau
colnames(eda_tau)[taucols_to_modify] <- sub("Tau$", "", colnames(eda_tau)[taucols_to_modify])

#remove PSD
colnames(eda_psd95)[psd95cols_to_modify] <- sub("PSD95$", "", colnames(eda_psd95)[psd95cols_to_modify])

# View the updated column names
print(colnames(eda_bdnf[c(5:14)]))
print(colnames(eda_tau[c(19:67)]))
print(colnames(eda_psd95[c(72:116)]))

#dev.new(width=14, height=7)
#par(mfrow = c(3, 3))
#layout(matrix(c(0, 1, 0, 2, 2, 2, 3, 3, 3), nrow = 3, byrow = TRUE))
#with()!
boxplot(eda_bdnf[, c(5:14)], 
        xlab = "CpGs", 
        ylab = "Methylation Level", 
        main = "Boxplot of the BDNF-CpGs")

boxplot(eda_tau[, c(19:67)], 
        xlab = "CpGs", 
        ylab = "Methylation Level", 
        main = "Boxplot of the Tau-CpGs")

boxplot(eda_psd95[, c(72:116)], 
        xlab = "CpGs", 
        ylab = "Methylation Level", 
        main = "Boxplot of the PSD95-CpGs")

```
#### Zoom to methlyated CpGs in Tau and PSD95
siehe "131124_TBM mit Martin.qmd" ab Zeile 1074

### Violinplots
Siehe "Python_violinplots.ipynb"


### Lineplots

#### BDNF
```{r}
#line Plot
library(ggplot2)
library(tidyr)

# Reshape the data into long format
eda_bdnf_long <- pivot_longer(eda_bdnf[c(1:14)], 
                              cols = 5:14, 
                              names_to = "CpG", 
                              values_to = "Expression")


# Create the line plot
ggplot(eda_bdnf_long, aes(x = `CpG`, y = Expression, group = `ID.BDNF`, color = `Group.BDNF`)) +
  geom_line() +  # Connect data points with lines
  geom_point() + # Optionally add points to show individual values
  labs(title = "Line Plot of the BDNF-CpGs by Group", 
       x = "CpGs BDNF", 
       y = "Expression Level") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability


# Create the line plot
ggplot(eda_bdnf_long, aes(x = `CpG`, y = Expression, group = `ID.BDNF`, color = `Zeitpunkt.BDNF`)) +
  geom_line() +  # Connect data points with lines
  geom_point() + # Optionally add points to show individual values
  labs(title = "Line Plot of the BDNF-CpGs by Zeitpunkt", 
       x = "CpGs BDNF", 
       y = "Expression Level") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability

# Create the line plot
ggplot(eda_bdnf_long, aes(x = `CpG`, y = Expression, group = `ID.BDNF`, color = `ID.BDNF`)) +
  geom_line() +  # Connect data points with lines
  geom_point() + # Optionally add points to show individual values
  labs(title = "Line Plot of the BDNF-CpGs by ID", 
       x = "CpGs BDNF", 
       y = "Expression Level") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
```
#### Tau
to be continued

#### PSD95
to be continued




```{r}
#BDNF
eda_bdnf_long <- pivot_longer(eda_bdnf, 
                              cols = 5:14, 
                              names_to = "CpG", 
                              values_to = "Expression")
#Tau
eda_tau_long <- pivot_longer(eda_tau, 
                              cols = 19:67, 
                              names_to = "CpG", 
                              values_to = "Expression")
# PSD95
eda_psd95_long <- pivot_longer(eda_psd95, 
                              cols = 72:116, 
                              names_to = "CpG", 
                              values_to = "Expression")

# Create the line plot showing individual changes between CpGs
#BDNF
ggplot(eda_bdnf_long, aes(x = CpG, y = Expression, group = `ID.BDNF`, color = `ID.BDNF`)) +
  geom_line(size = 0.5) +
  geom_point(size = 1) +
  geom_smooth(method = "loess", se = FALSE, aes(group = CpG), size = 1) +  # Add smooth trend lines
  labs(title = "Change in Expression of BDNF-CpGs Between IDs", 
       x = "CpGs BDNF", 
       y = "Expression Level") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

#Tau
ggplot(eda_tau_long, aes(x = CpG, y = Expression, group = `ID.Tau`, color = `ID.Tau`)) +
  geom_line(size = 0.5) +
  geom_point(size = 1) +
  geom_smooth(method = "loess", se = FALSE, aes(group = CpG), size = 1) +  # Add smooth trend lines
  labs(title = "Change in Expression of Tau-CpGs Between IDss", 
       x = "CpGs Tau", 
       y = "Expression Level") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


#PSD95
ggplot(eda_psd95_long, aes(x = CpG, y = Expression, group = `ID.PSD95`, color = `ID.PSD95`)) +
  geom_line(size = 0.5) +
  geom_point(size = 1) +
  geom_smooth(method = "loess", se = FALSE, aes(group = CpG), size = 1) +  # Add smooth trend lines
  labs(title = "Change in Expression of PSD95-CpGs Between IDs", 
       x = "CpGs PSD95", 
       y = "Expression Level") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
**Cave: Vergleich mit Boxplot!**

```{r}
# Line für Zeitpunkt
# Create the line plot showing individual changes between CpGs
#BDNF
ggplot(eda_bdnf_long, aes(x = CpG, y = Expression, group = `Zeitpunkt.BDNF`, color = `Zeitpunkt.BDNF`)) +
  geom_line(size = 0.5) +
  geom_point(size = 1) +
  geom_smooth(method = "loess", se = FALSE, aes(group = CpG), size = 1) +  # Add smooth trend lines
  labs(title = "Change in Expression of BDNF-CpGs Between Time Points", 
       x = "Group BDNF", 
       y = "Expression Level") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

#Tau
ggplot(eda_tau_long, aes(x = CpG, y = Expression, group = `Zeit.Tau`, color = `Zeit.Tau`)) +
  geom_line(size = 0.5) +
  geom_point(size = 1) +
  geom_smooth(method = "loess", se = FALSE, aes(group = CpG), size = 1) +  # Add smooth trend lines
  labs(title = "Change in Expression of Tau-CpGs Between Time Points", 
       x = "Group Tau", 
       y = "Expression Level") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


#PSD95
ggplot(eda_psd95_long, aes(x = CpG, y = Expression, group = `Zeitpunkt.PSD95`, color = `Zeitpunkt.PSD95`, na.rm = TRUE)) +
  geom_line(size = 0.5) +
  geom_point(size = 1) +
  geom_smooth(method = "loess", se = FALSE, aes(group = CpG), size = 1) +  # Add smooth trend lines
  labs(title = "Change in Expression of PSD95-CpGs Between Time Points", 
       x = "Group PSD95", 
       y = "Expression Level") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
